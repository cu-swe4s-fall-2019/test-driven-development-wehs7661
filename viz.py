import argparse
import sys
import get_data
import data_viz


def initialize():
    """Initialize the code by taking arguments from the command line

    Parameters
    ----------
    There are no parameters passed to this function

    Returns
    -------
    args : type: argparse namespace

    """
    parser = argparse.ArgumentParser(
        description=' This program takes a certain column of the data'
        ' from stdin generated by gen_data.sh given the column number'
        ' and plot a boxplot or a histogram or both given the type of'
        ' the plot specified by the user. Finally, the plot will be'
        ' saved with the specified filename.',
        prog='viz.py'
    )
    parser.add_argument('-t',
                        '--type',
                        type=str,
                        help='The type of the plot to be generated. Options: '
                        'boxplot, histogram and combo',
                        required=True)

    parser.add_argument('-n',
                        '--output_name',
                        type=str,
                        help='The file name of the input file, which should be'
                        ' a tab-separated file of integers.',
                        required=True)

    parser.add_argument('-c',
                        '--col_num',
                        type=int,
                        help='The column number',
                        required=True)

    args = parser
    # or we can return parser.parse_args() and use args = initialize() in the
    # main function instead

    return args


def main():
    args = initialize().parse_args(sys.argv[1:])  # sys.args[0]: program name

    # get the data from STDIN and check if the column number is valid
    try:
        L = get_data.read_stdin_col(int(args.col_num))
    except IndexError:
        raise IndexError('Invalid column number')
        sys.exit(1)
    except TypeError:
        raise TypeError('Wrong data type of input')
        sys.exit(1)

    if (args.type == 'histogram'):
        data_viz.histogram(L, args.output_name)
    elif (args.type == 'boxplot'):
        data_viz.boxplot(L, args.output_name)
    elif (args.type == 'combo'):
        data_viz.combo(L, args.output_name)
    else:
        print('Invalid plot type')
        sys.exit(1)


if __name__ == '__main__':
    main()
